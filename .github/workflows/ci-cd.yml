name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths:
      - 'deploy/**'
      - '**.js'
      - '**.json'

jobs:
  run-unit-tests:
    name: üß™ Run Coverage tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run tests and generate coverage report
        run: yarn coverage
        env:
          CI: true

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./coverage

  # run-bdd-tests:
  #   name: üß™ Run BDD Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #         cache: 'yarn'
  #     - run: yarn install --frozen-lockfile
  #     - name: 'Create .env file'
  #       run: |
  #         touch .env
  #         echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
  #         echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
  #         cat .env
  #     - run: yarn test:bdd

  sonarcloud-analysis:
    name: üîç SonarCloud Analysis
    needs: 
      - run-unit-tests
      # - run-bdd-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 
        
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'temurin'
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install dependencies
        run: yarn install

      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: ./coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: ./
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  trigger-approve-and-deploy:
    name: Trigger Approve and Deploy
    needs: 
      - sonarcloud-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Approve and Deploy Workflow
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh workflow run approve-and-deploy.yml